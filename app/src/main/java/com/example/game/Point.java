package com.example.game;

/**
 *
 * This class represents a point
 *
 * The Variables in this class are x, y and z which represent the x coordinate, y coordinate and z coordinate of this point
 *
 * The Methods involved in this class are getPosition, toString, PlusVector, MinusVector, MinusPoint
 *
 * @author Ma Zixiao
 *
 *
 */

public class Point {

	public float x;
	public float y;

	
	// default constructor
	public Point() {
		x = 0.0f;
		y = 0.0f;
	}
	
	//initializing constructor
	public Point(float x, float y) {
		this.x = x;
		this.y = y;
	}
	
	// sometimes for different algorithms we will need to address the point using positions 0 1 2 
	public float getPostion(int postion)
	{
		switch(postion)
		{
		case 0: return x;
		case 1: return y;
		default: return Float.NaN;
		} 
	}
	
	public String toString()
	{
		return ("(" + x +"," + y + "," +")");
    }


    //What this method aims to do is to return the result point after this point plus a vector
	//To do that, what this method do is to return a new point whose x, y, z are the sum of this point's x and the vector's x
	//this point's y and the vector's y, this point's z and the vector's z
	public Point PlusVector(Vector Additonal) {
	 	return new Point(this.x+Additonal.x, this.y+Additonal.y);
	}

	//What this method aims to do is to return the result point after this point minus a vector
	//To do that, what this method do is to return a new point whose x, y, z are the result of this point's x minus the vector's x
	//this point's y minus the vector's y, this point's z minus the vector's z
	public Point MinusVector(Vector Minus) {
		return new Point(this.x-Minus.x, this.y-Minus.y);
	}


	public void setX(float x) {
		this.x = x;
	}

	public void setY(float y) {
		this.y = y;
	}

	//What this method aims to do is to return the result vector after this point minus a point
	//To do that, what this method do is to return a new vector whose x, y, z are the result of this point's x minus the point's x
	//this point's y minus the point's y, this point's z minus the point's z
	public Vector MinusPoint(Point Minus) {
	 	return new Vector(this.x-Minus.x, this.y-Minus.y);
	}
	
	 
	 // Remember point + point  is not defined so we not write a method for it. 
	
	
	 
	  
	
}

/*................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
....................................=?7777+.....................................
.............................,8MMMMMMMMMMMMMMMMM7...............................
...........................$MMMMMMMMMMMMMMMMMMMMMM7.............................
........................IMMMMMMMMMMMMMMMMMMMMMMMMMMMM?..........................
......................?MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN........................
.....................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM$......................
...................ZMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM.....................
..................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM8....................
.................NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM...................
................IMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM..................
................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM$.................
...............=MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ................
..............:MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM................
..............7MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM:...............
..............DMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ...............
..............MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM8...............
..............MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN...............
..............NMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMO...............
..............$MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMI...............
..............+MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM=...............
...............8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM................
................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM8................
................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMN,................
................=MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM..................
.................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMZ..................
..................MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMD...................
...................?MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM.....................
....................8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM......................
.....................,8MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM,.......................
........................NMMMMMMMMMMMMMMMMMMMMMMMMMMMMN?.........................
..........................NMMMMMMMMMMMMMMMMMMMMMMMMMI...........................
.............................$MMMMMMMMMMMMMMMMMMM?..............................
.................................,I$NMMMMMN$?...................................
................................................................................
................................................................................
................................................................................
.......................................................................*/
